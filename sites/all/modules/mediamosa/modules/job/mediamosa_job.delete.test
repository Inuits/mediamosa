<?php
/**
 * @file
 * Job tests for deleted jobs.
 */

/**
  * @file
  * Unittests for job deleting asset with running jobs.
  */
class MediaMosaJobDeleteTestCaseEga extends MediaMosaTestCaseEgaJob {

  // ------------------------------------------------------------------ Members.

  // ------------------------------------------------------------------ Functions.
  public static function getInfo() {
    return array(
      'name' => 'JOB - Delete mediafile test',
      'description' => 'Deleting an asset with running jobs.',
      'group' => MEDIAMOSA_TEST_GROUP_MEDIAMOSA_CORE_JOB,
    );
  }

  // ------------------------------------------------------------------ Tests.

  // (see ticket 220)
  function testJobDelete() {

    // Delete a mediafile with a running job.

    // Create upload file.
    $upload = $this->uploadTestFile();
    $asset_id = $upload['asset_id'];
    $mediafile_id = $upload['mediafile_id'];

    // Create still job.
    $job_id = $this->createMediafileStill($mediafile_id);

    // Delete the mediafile.
    // A running job exists.
    $response = $this->deleteMediafile($mediafile_id);

    // Delete the mediafile_id from the clean up.
    $this->deleteFromCleanUp($mediafile_id);

    // Delete an asset with a running job.

    // Create upload file.
    $upload = $this->uploadTestFile();
    $asset_id = $upload['asset_id'];
    $mediafile_id = $upload['mediafile_id'];

    // Create still job.
    $job_id = $this->createMediafileStill($mediafile_id);

    // Delete the asset.
    // A running job exists.
    $a_parameters = array(
      mediamosa_rest_call_asset_delete::DELETE => 'cascade',
    );
    $response = $this->deleteAsset($asset_id, $a_parameters);

    // Delete the mediafile_id from the clean up.
    $this->deleteFromCleanUp($mediafile_id);
  }
}
