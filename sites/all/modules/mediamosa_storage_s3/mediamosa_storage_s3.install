<?php
/**
 * @file
 * Install, update, and uninstall functions for the mediamosa mountpoint storage module.
 */

require_once 'mediamosa_storage_s3_db.class.inc';

/**
 * Implements hook_requirements().
 */
function mediamosa_storage_s3_requirements($phase) {

  $requirements = array();

  // Ensure translations don't break at install time.
  $t = get_t();
  
  // No special requirements for standard storage

  return $requirements;
}

/**
 * Implements hook_install().
 */
function mediamosa_storage_s3_install() {
  // Create our table(s).
  mediamosa::drupal_install_schema('mediamosa_storage_s3');
}

/**
 * Implements hook_uninstall().
 */
function mediamosa_storage_s3_uninstall() {
  // Delete all nodes for this storage type
  $result = db_select(mediamosa_storage_s3_db::TABLE_NAME, 'p')
    ->fields('p', array(mediamosa_storage_profile_db::NID))
    ->execute();

  foreach ($result as $record) {
    node_delete($record->{mediamosa_storage_profile_db::NID});
  }  
  
  // Drop our table(s).
  mediamosa::drupal_uninstall_schema('mediamosa_storage_s3');

  // Remove our variables.
  $result = db_select('variable', 'v')
    ->fields('v', array('name'))
    ->condition('name', db_like('mediamosa_storage_s3_') . '%', 'LIKE')
    ->execute();

  foreach ($result as $row) {
    variable_del($row->name);
  }
}

/**
 * Implements hook_disable().
 */
function mediamosa_storage_s3_disable() {
  // Nothing todo
}

/**
 * Implements hook_schema().
 */
function mediamosa_storage_s3_schema() {

  $schema = array();
  $schema[mediamosa_storage_s3_db::TABLE_NAME] = array(
    'description' => 'The mountpoint storage table.',
    'fields' => array(
      mediamosa_storage_profile_db::NID => array(
        'description' => 'The Drupal node id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      mediamosa_storage_profile_db::VID => array(
        'description' => 'The Drupal node revision id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      mediamosa_storage_profile_db::ID => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The storage profile id.',
      ),
      mediamosa_storage_s3_db::KEY => array(
        'type' => 'varchar',
        'length' => mediamosa_storage_s3_db::KEY_LENGTH,
        'not null' => TRUE,
  			'description' => 'AWS access key id.',
      ),
      mediamosa_storage_s3_db::SECRET => array(
        'type' => 'varchar',
        'length' => mediamosa_storage_s3_db::SECRET_LENGTH,
        'not null' => TRUE,
  			'description' => 'AWS secret access key.',
      ),
    ),
    'primary key' => array(mediamosa_storage_profile_db::ID),
    'unique keys' => array(
      'uni_nid' => array(mediamosa_storage_profile_db::NID),
    ),
  );
  
  return $schema;
}
